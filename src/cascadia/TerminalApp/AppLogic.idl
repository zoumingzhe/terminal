// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

import "TerminalPage.idl";
import "ShortcutActionDispatch.idl";
import "IDirectKeyListener.idl";

namespace TerminalApp
{
    struct InitialPosition
    {
        Int64 X;
        Int64 Y;
    };

    [default_interface] runtimeclass AppLogic : IDirectKeyListener, IDialogPresenter
    {
        AppLogic();

        // For your own sanity, it's better to do setup outside the ctor.
        // If you do any setup in the ctor that ends up throwing an exception,
        // then it might look like TermApp just failed to activate, which will
        // cause you to chase down the rabbit hole of "why is TermApp not
        // registered?" when it definitely is.
        void Create();

        Boolean IsUwp();
        void RunAsUwp();
        Boolean IsElevated();

        Int32 SetStartupCommandline(String[] commands);
        String ParseCommandlineMessage { get; };
        Boolean ShouldExitEarly { get; };

        void LoadSettings();
        Windows.UI.Xaml.UIElement GetRoot();

        String Title { get; };

        Boolean FocusMode { get; };
        Boolean Fullscreen { get; };
        Boolean AlwaysOnTop { get; };

        Windows.Foundation.Size GetLaunchDimensions(UInt32 dpi);

        InitialPosition GetInitialPosition(Int64 defaultInitialX, Int64 defaultInitialY);
        Windows.UI.Xaml.ElementTheme GetRequestedTheme();
        Microsoft.Terminal.Settings.Model.LaunchMode GetLaunchMode();
        Boolean GetShowTabsInTitlebar();
        Single CalcSnappedDimension(Boolean widthOrHeight, Single dimension);
        void TitlebarClicked();
        void WindowCloseButtonClicked();

        // See IDialogPresenter and TerminalPage's DialogPresenter for more
        // information.
        Windows.Foundation.IAsyncOperation<Windows.UI.Xaml.Controls.ContentDialogResult> ShowDialog(Windows.UI.Xaml.Controls.ContentDialog dialog);

        event Windows.Foundation.TypedEventHandler<Object, Windows.UI.Xaml.UIElement> SetTitleBarContent;
        event Windows.Foundation.TypedEventHandler<Object, String> TitleChanged;
        event Windows.Foundation.TypedEventHandler<Object, LastTabClosedEventArgs> LastTabClosed;
        event Windows.Foundation.TypedEventHandler<Object, Windows.UI.Xaml.ElementTheme> RequestedThemeChanged;
        event Windows.Foundation.TypedEventHandler<Object, Object> FocusModeChanged;
        event Windows.Foundation.TypedEventHandler<Object, Object> FullscreenChanged;
        event Windows.Foundation.TypedEventHandler<Object, Object> AlwaysOnTopChanged;
    }
}
